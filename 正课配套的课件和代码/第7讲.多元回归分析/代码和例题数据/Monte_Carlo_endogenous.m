%% 蒙特卡洛模拟：内生性会造成回归系数的巨大误差
times = 300; % 蒙特卡洛的次数
R = zeros(times, 1); % 用来储存扰动项 u 和 x1 的相关系数
K = zeros(times, 1); % 用来储存遗漏了 x2 之后，只用 y 对 x1 回归得到的回归系数
for i = 1:times
    n = 30; % 样本数据量为 n
    x1 = -10 + rand(n, 1) * 20; % x1 在 -10 和 10 上均匀分布，大小为 30 * 1
    u1 = normrnd(0, 5, n, 1) - rand(n, 1); % 随机生成一组随机数
    x2 = 0.3 * x1 + u1; % x2 与 x1 的相关性不确定，因为我们设定了 x2 要加上 u1 这个随机数
    % 这里的系数 0.3 随便给的，没特殊的意义，也可以改成其他的测试。
    u = normrnd(0, 1, n, 1); % 扰动项 u 服从标准正态分布
    y = 0.5 + 2 * x1 + 5 * x2 + u; % 构造 y
    k = (n * sum(x1.*y) - sum(x1) * sum(y)) / (n * sum(x1.*x1) - sum(x1) * sum(x1)); % y = k * x1 + b 回归估计出来的 k
    K(i) = k;
    u = 5 * x2 + u; % 因为我们回归中忽略了 5 * x2，所以扰动项要加上 5 * x2
    r = corrcoef(x1, u); % 2 * 2 的相关系数矩阵
    R(i) = r(2, 1);
end
plot(R, K, '*')
xlabel("x_1 和 u' 的相关系数")
ylabel("k 的估计值")

% % 注意：代码文件仅供参考，一定不要直接用于自己的数模论文中
% % 国赛对于论文的查重要求非常严格，代码雷同也算作抄袭