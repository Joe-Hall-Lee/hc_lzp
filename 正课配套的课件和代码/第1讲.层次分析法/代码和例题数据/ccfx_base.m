%% MATLAB 基本的小常识
% （1）在每一行的语句后面加上分号（一定要是英文的; 中文的长这个样子；）表示不显示运行结果
a = 3;
a = 5

% （2）多行注释：选中要注释的若干语句，快捷键 Ctrl + R
% a = 3;
% a = 5

% （3）取消注释：选中要取消注释的语句，快捷键 Ctrl + T
% 我想要取消注释下面这行
% 还有这一行

% clear 可以清除工作区的所有变量
clear

% clc 可以清除命令行窗口中的所有文本，让屏幕变得干净
clc

% 所以大家在很多代码开头，都会见到：
clear; clc % 分号也用于区分行。
% 这两条一起使用，起到"初始化"的作用，防止之前的结果对新脚本文件（后缀名是 .m）产生干扰。

%% 输出和输入函数（disp 和 input）
% disp 函数
% matlab 中 disp() 就是屏幕输出函数，类似于 C 语言中的 printf() 函数
disp('Hello, world!')
a = [1, 2, 3] % 同一行中间用逗号分隔，也可以不用逗号，直接用空格
a = [1, 2, 3]
a = [1; 2; 3] % 分号可以用来分割每一行的元素
disp(a)
% 注意，disp 函数比较特殊，这里可要分号，可不要分号
disp(a);
% matlab 中两个字符串的合并有两种方法
% （1）strcat(str1, str2, ..., strn)
strcat('字符串 1', '字符串 2')
strcat('字符串 1', '字符串 2', '字符串 3')
% （2）[str1, str2, ..., strn]或[str1 str2 ... strn]
['字符串 1', '字符串 2']
['字符串 1', '字符串 2']
['字符串 1', '字符串 2', '字符串 3']
% 一个有用的字符串函数：num2str 将数字转换为字符串
c = 100
num2str(c)
disp(['c 的取值为', num2str(c)])
disp(strcat('c 的取值为', num2str(c)))

% input 函数
% 一般我们会将输入的数、向量、矩阵、字符串等赋给一个变量，这里我们赋给 A
A = input('请输入 A：');
B = input('请输入 B：')
% 注意观察工作区，并体会 input 后面加分号和不加分号的区别

%% sum 函数
% （1）如果是向量（无论是行向量还是列向量），都是直接求和
E = [1, 2, 3]
sum(E)
E = [1; 2; 3]
sum(E)
% （2）如果是矩阵，则需要根据行和列的方向作区分
clc
E = [1, 2; 3, 4; 5, 6] % E = [1 2; 3 4; 5 6] 矩阵同行元素用逗号或者空格隔开，不同行之间用分号隔开
% a = sum(x);  % 按列求和（得到一个行向量）
a = sum(E)
a = sum(E, 1) % dim = 1 表示按照列，dim = 2 表示按照行，默认 dim = 1
% a = sum(x, 2);  % 按行求和（得到一个列向量）
a = sum(E, 2)
% a = sum(x(:));  % 对整个矩阵求和
a = sum(sum(E))
a = sum(E(:))

%% 基础：matlab 中如何提取矩阵中指定位置的元素？
% （1）取指定行和列的一个元素（输出的是一个值）
clc;
A = [1, 1, 4, 1 / 3, 3; 1, 1, 4, 1 / 3, 3; 1 / 4, 1 / 4, 1, 1 / 3, 1 / 2; 3, 3, 3, 1, 3; 1 / 3, 1 / 3, 2, 1 / 3, 1];
A
A(2, 1)
A(3, 2)
% （2）取指定的某一行的全部元素（输出的是一个行向量）
clc; A
A(2, :) % : 表示取所有元素
A(5, :)
% （3）取指定的某一列的全部元素（输出的是一个列向量）
clc; A
A(:, 1)
A(:, 3)
% （4）取指定的某些行的全部元素（输出的是一个矩阵）
clc; A
A([2, 5], :) % 只取第二行和第五行（一共 2 行）
A(2:5, :) % 取第二行到第五行（一共 4 行）
A(2:2:5, :) % 取第二行和第四行（从 2 开始，每次递增 2 个单位，到 5 结束）
1:3:10
10:-1:1
A(2:end, :) % 取第二行到最后一行
A(2:end-1, :) % 取第二行到倒数第二行
% （5）取全部元素（按列拼接的，最终输出的是一个列向量）
clc; A
A(:)

%% size 函数
clc;
A = [1, 2, 3; 4, 5, 6]
B = [1, 2, 3, 4, 5, 6]
size(A)
size(B)
% size(A) 函数是用来求矩阵 A 的大小的，它返回一个行向量，第一个元素是矩阵的行数，第二个元素是矩阵的列数
[r, c] = size(A)
% 将矩阵 A 的行数返回到第一个变量 r，将矩阵的列数返回到第二个变量 c
r = size(A, 1) % 返回行数
c = size(A, 2) % 返回列数

%% repmat 函数
% B = repmat(A, m, n):将矩阵 A 复制 m × n 块，即把 A 作为 B 的元素，B 由 m × n 个 A 平铺而成。
A = [1, 2, 3; 4, 5, 6]
B = repmat(A, 2, 1)
B = repmat(A, 3, 2)

%% MATLAB 中矩阵的运算
% MATLAB 在矩阵的运算中，"*"号和"/"号代表矩阵之间的乘法与除法（A / B = A * inv(B)）
A = [1, 2; 3, 4]
B = [1, 0; 1, 1]
A * B
inv(B) % 求 B 的逆矩阵
B * inv(B)
A * inv(B)
A / B

% 两个形状相同的矩阵对应元素之间的乘除法需要使用".*"和"./"
A = [1, 2; 3, 4]
B = [1, 0; 1, 1]
A .* B
A ./ B

% 每个元素同时和常数相乘或相除操作都可以使用
A = [1, 2; 3, 4]
A * 2
A .* 2
A / 2
A ./ 2

% 每个元素同时乘方时只能用 .^
A = [1, 2; 3, 4]
A.^2
A^2
A * A

%% MATLAB 中求特征值和特征向量
% 在 MATLAB 中，计算矩阵 A 的特征值和特征向量的函数是 eig(A)，其中最常用的两个用法：
A = [1, 2, 3; 2, 2, 1; 2, 0, 3]
% （1）E = eig(A)：求矩阵 A 的全部特征值，构成向量 E。
E = eig(A)
% （2）[V, D] = eig(A)：求矩阵 A 的全部特征值，构成对角阵 D，并求 A 的特征向量构成 V 的列向量。（V 的每一列都是 D 中与之相同列的特征值的特征向量）
[V, D] = eig(A)

%% find 函数的基本用法
% 下面例子来自博客：https://www.cnblogs.com/anzhiwu815/p/5907033.html 博客内有更加深入的探究
% find 函数，它可以用来返回向量或者矩阵中不为 0 的元素的位置索引。
clc; X = [1, 0, 4, -3, 0, 0, 0, 8, 6]
ind = find(X)
% 其有多种用法，比如返回前 2 个不为 0 的元素的位置：
ind = find(X, 2)

% 上面针对的是向量（一维），若 X 是一个矩阵（二维，有行和列），索引该如何返回呢？
clc; X = [1, -3, 0; 0, 0, 8; 4, 0, 6]
ind = find(X)
% 这是因为在 MATLAB 在存储矩阵时，是一列一列存储的，我们可以做一下验证：
X(4)
% 假如你需要按照行列的信息输出该怎么办呢？
[r, c] = find(X)
[r, c] = find(X, 1) % 只找第一个非 0 元素

%% 矩阵与常数的大小判断运算
% 共有三种运算符：大于 >；小于 <；等于 ==（一个等号表示赋值；两个等号表示判断）
clc
X = [1, -3, 0; 0, 0, 8; 4, 0, 6]
X > 0
X == 4

%% 判断语句
% MATLAB 的判断语句，if 所在的行不需要冒号，语句的最后一定要以 end 结尾；中间的语句要注意缩进。
a = input('请输入考试分数：')
if a >= 85
    disp('成绩优秀')
elseif a >= 60
    disp('成绩合格')
else
    disp('成绩挂科')
end


% % 注意：代码文件仅供参考，一定不要直接用于自己的数模论文中
% % 国赛对于论文的查重要求非常严格，代码雷同也算作抄袭